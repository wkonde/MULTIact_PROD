# -*- coding: utf-8 -*-
"""
Odoo Proprietary License v1.0.

see License:
https://www.odoo.com/documentation/user/14.0/legal/licenses/licenses.html#odoo-apps
# Copyright Â©2020 Bernard K. Too<bernard.too@optima.co.ke>
"""
from num2words import num2words

from odoo import _, api, fields, models


class InvoiceTemplates(models.Model):
    _inherit = ["account.move"]

    @api.onchange("partner_id")
    def onchange_partner_style(self):
        self.style = (
            self.partner_id.style
            or self.env.user.company_id.df_style
            or self.env.ref("customized_invoice.df_style_for_all_reports")
        )

    @api.model
    def create(self, vals):
        res = super(InvoiceTemplates, self).create(vals)
        if res:  # trigger onchage after creating invoice to update the partner style
            res.onchange_partner_style()
        return res

    style = fields.Many2one(
        "report.template.settings",
        "Invoice Style",
        help="Select Style to use when printing this invoice",
        default=lambda self: self.partner_id.style or self.env.user.company_id.df_style,
    )
    project_title = fields.Char(
        "Title",
        help="The title of your customer project or work you are doing for your customer",
    )
    amount_words = fields.Char(
        "Amount in Words:",
        help="The invoice total amount in words is automatically generated by the system..few languages are supported currently",
        compute="_compute_num2words",
    )

    def _compute_num2words(self):
        style = (
            self.style
            or self.partner_id.style
            or self.env.user.company_id.df_style
            or self.env.ref("customized_invoice.df_style_for_all_reports")
        )
        if style and style.aiw_report:
            try:
                self.amount_words = (
                    num2words(self.amount_total, lang=self.partner_id.lang or "en")
                    + " "
                    + (self.currency_id.currency_name or "")
                ).upper()
            except NotImplementedError:
                self.amount_words = (
                    num2words(self.amount_total, lang="en")
                    + " "
                    + (self.currency_id.currency_name or "")
                ).upper()
        else:
            self.amount_words = _("Disabled")
